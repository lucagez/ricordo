{"version":3,"file":"ricordo.mjs","sources":["../src/ricordo.mjs"],"sourcesContent":["// This func exposes the newly created `Ricordo` instance.\n// Interacting with the inner class method (private).\nfunction run(...args) {\n  // Avoiding stringification of simple arguments as js Map support any type.\n  // By simple I mean every type comparable `simply` with the strict equality operator `===`.\n  // => Comparing simple arrais and objects is simpler by stringifying them\n  // and comparing the resulting strings.\n\n  // NOTE-1: this is not tested with complex structure.\n\n  // NOTE-2: this func will throw error if a circular structure is provided.\n  // Support for those structures is out of the scope of this library\n  // => Keeping it small and usable also on the browser.\n\n  const key = (() => {\n    if (args.length <= 1) return typeof args[0] === 'object' ? JSON.stringify(args[0]) : args[0];\n    return JSON.stringify(args);\n  })();\n\n  if (this.map.has(key)) return this.map.get(key);\n\n  const result = this.func(...args);\n  this.map.set(key, result);\n  return result;\n}\n\nexport default class Ricordo {\n  // CONFIG SI VEDRA` (:\n  constructor(func) {\n    if (typeof func !== 'function') throw new TypeError('func argument must be of type `function`');\n\n    this.map = new Map();\n    this.func = func;\n\n    return run.bind(this);\n  }\n}\n"],"names":["constructor","func","TypeError","map","Map","key","args","length","JSON","stringify","this","has","get","result","ref","set","bind"],"mappings":"eA4BEA,SAAYC,MACU,mBAATA,EAAqB,MAAM,IAAIC,UAAU,wDAE/CC,IAAM,IAAIC,SACVH,KAAOA,EA9BhB,wEAYQI,EACAC,EAAKC,QAAU,EAA6B,iBAAZD,EAAK,GAAkBE,KAAKC,UAAUH,EAAK,IAAMA,EAAK,GACnFE,KAAKC,UAAUH,MAGpBI,KAAKP,IAAIQ,IAAIN,GAAM,OAAOK,KAAKP,IAAIS,IAAIP,OAErCQ,KAASH,MAAKT,WAAKa,EAAGR,eACvBH,IAAIY,IAAIV,EAAKQ,GACXA,GAWMG,KAAKN"}