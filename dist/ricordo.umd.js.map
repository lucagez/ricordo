{"version":3,"file":"ricordo.umd.js","sources":["../src/ricordo.mjs"],"sourcesContent":["\n// This func exposes the newly created `Ricordo` instance.\n// Interacting with the inner class method (private).\nfunction run(...args) {\n  // Avoiding stringification of simple arguments as js store support any type.\n  // By simple I mean every type comparable `simply` with the strict equality operator `===`.\n  // => Comparing simple arrais and objects is simpler by stringifying them\n  // and comparing the resulting strings.\n\n  // NOTE-1: this is not tested with objects with a complex structure.\n\n  // NOTE-2: this func will throw error if a circular structure is provided.\n  // Support for those structures is out of the scope of this library\n  // => Keeping it small and usable also on the browser.\n\n  const key = (() => {\n    if (args.length <= 1) return typeof args[0] === 'object' ? JSON.stringify(args[0]) : args[0];\n    return JSON.stringify(args);\n  })();\n\n  if (this.store.has(key)) return this.store.get(key);\n\n  const result = this.func(...args);\n  this.store.set(key, result);\n  return result;\n}\n\n// For stats => just override Map (extends) native implementation\n// Actually add `has`.\n// class MyMap extends Map {\n//   set(...args) {\n//     console.log(\"set called\");\n//     return super.set(...args);\n//   }\n//   get(...args) {\n//     console.log(\"get called\");\n//     return super.get(...args);\n//   }\n// }\n\nclass _Trap {\n  constructor() {\n    this.map = new Map();\n  }\n\n  has(...args) {\n    return this.map.has(...args);\n  }\n\n  get(...args) {\n    return this.map.get(...args);\n  }\n\n  set(...args) {\n    return this.map.set(...args);\n  }\n}\n\nexport default class Ricordo {\n  // CONFIG SI VEDRA` (:\n  constructor(func, config) {\n    if (typeof func !== 'function') throw new TypeError('func argument must be of type `function`');\n\n    // Key value store used for caching `arguments => results`\n    this.store = config ? new _Trap(config) : new Map();\n    this.func = func;\n\n    return run.bind(this);\n  }\n}\n"],"names":["_Trap","constructor","map","Map","has","this","ref","args","get","set","func","config","TypeError","store","key","length","JSON","stringify","result","bind"],"mappings":"sKAwCA,IAAMA,EACJC,gBACOC,IAAM,IAAIC,YAGjBC,YAAAA,iFACSC,KAAKH,KAAIE,UAAIE,EAAGC,IAGzBC,YAAAA,iFACSH,KAAKH,KAAIM,UAAIF,EAAGC,IAGzBE,YAAAA,iFACSJ,KAAKH,KAAIO,UAAIH,EAAGC,IAMzBN,SAAYS,EAAMC,MACI,mBAATD,EAAqB,MAAM,IAAIE,UAAU,wDAG/CC,MAAQF,EAAS,IAAIX,EAAMW,GAAU,IAAIR,SACzCO,KAAOA,EA9DhB,wEAYQI,EACAP,EAAKQ,QAAU,EAA6B,iBAAZR,EAAK,GAAkBS,KAAKC,UAAUV,EAAK,IAAMA,EAAK,GACnFS,KAAKC,UAAUV,MAGpBF,KAAKQ,MAAMT,IAAIU,GAAM,OAAOT,KAAKQ,MAAML,IAAIM,OAEzCI,KAASb,MAAKK,WAAKJ,EAAGC,eACvBM,MAAMJ,IAAIK,EAAKI,GACbA,GA2CMC,KAAKd"}