{"version":3,"file":"ricordo.js","sources":["../src/ricordo.mjs"],"sourcesContent":["\n// This func exposes the newly created `Ricordo` instance.\n// Interacting with the inner class method (private).\nfunction run(...args) {\n  // Avoiding stringification of simple arguments as js store support any type.\n  // By simple I mean every type comparable `simply` with the strict equality operator `===`.\n  // => Comparing simple arrais and objects is simpler by stringifying them\n  // and comparing the resulting strings.\n\n  // NOTE-1: this is not tested with objects with a complex structure.\n\n  // NOTE-2: this func will throw error if a circular structure is provided.\n  // Support for those structures is out of the scope of this library\n  // => Keeping it small and usable also on the browser.\n\n  const key = (() => {\n    if (args.length <= 1) return typeof args[0] === 'object' ? JSON.stringify(args[0]) : args[0];\n    return JSON.stringify(args);\n  })();\n\n  if (this.store.has(key)) return this.store.get(key);\n\n  const result = this.func(...args);\n  this.store.set(key, result);\n  return result;\n}\n\n// For stats => just override Map (extends) native implementation\n// Actually add `has`.\n// class MyMap extends Map {\n//   set(...args) {\n//     console.log(\"set called\");\n//     return super.set(...args);\n//   }\n//   get(...args) {\n//     console.log(\"get called\");\n//     return super.get(...args);\n//   }\n// }\n\nexport default class Ricordo {\n  // CONFIG SI VEDRA` (:\n  constructor(func, config) {\n    if (typeof func !== 'function') throw new TypeError('func argument must be of type `function`');\n    if (typeof config !== 'object') throw new TypeError('config argument must be of type `object`');\n\n    // Key value store used for caching `arguments => results`\n    this.store = new Map();\n    this.func = func;\n\n    // NOPE\n    // Launching async stats => cron job.\n    // _stats.bind(this)(config);\n\n    return run.bind(this);\n  }\n}\n"],"names":["constructor","func","config","TypeError","store","Map","key","args","length","JSON","stringify","this","has","get","result","ref","set","bind"],"mappings":"eA0CEA,SAAYC,EAAMC,MACI,mBAATD,EAAqB,MAAM,IAAIE,UAAU,+CAC9B,iBAAXD,EAAqB,MAAM,IAAIC,UAAU,wDAG/CC,MAAQ,IAAIC,SACZJ,KAAOA,EA7ChB,wEAYQK,EACAC,EAAKC,QAAU,EAA6B,iBAAZD,EAAK,GAAkBE,KAAKC,UAAUH,EAAK,IAAMA,EAAK,GACnFE,KAAKC,UAAUH,MAGpBI,KAAKP,MAAMQ,IAAIN,GAAM,OAAOK,KAAKP,MAAMS,IAAIP,OAEzCQ,KAASH,MAAKV,WAAKc,EAAGR,eACvBH,MAAMY,IAAIV,EAAKQ,GACbA,GA8BMG,KAAKN"}